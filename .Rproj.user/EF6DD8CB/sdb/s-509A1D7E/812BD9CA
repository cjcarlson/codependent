{
    "collab_server" : "",
    "contents" : "# Hello, world!\n#\n# This is an example function named 'hello'\n# which prints 'Hello, world!'.\n#\n# You can learn more about package authoring with RStudio at:\n#\n#   http://r-pkgs.had.co.nz/\n#\n# Some useful keyboard shortcuts for package authoring:\n#\n#   Build and Reload Package:  'Ctrl + Shift + B'\n#   Check Package:             'Ctrl + Shift + E'\n#   Test Package:              'Ctrl + Shift + T'\n\n\ncurve.df <- function(assoc.df, iter){\n\n  u.hosts <- unique(assoc.df$Host)\n  n.hosts <- length(u.hosts)\n\n  results.df <- data.frame(n.host=0,n.par=0)\n  results.df <- results.df[-1,]\n\n  for (i in 1:n.hosts) {\n    #for (i in 1:5) {\n    for (j in 1:iter) {\n\n      sub.hosts <- sample(u.hosts,i)\n      sub.df <- assoc.df[assoc.df$Host %in% sub.hosts,]\n      u.par <- unique(sub.df$Parasite)\n      n.par <- length(u.par)\n\n      results.df[nrow(results.df)+1,] <- c(i, n.par)\n    }\n    print(i)\n  }\n  return(results.df)\n}\n\n# binary network rarefaction\n\nbinera <- function(assoc.df, iter) {\n\n  c <- curve.df(assoc.df, iter)\n  model1 <- nls(n.par~b*n.host^z,start = list(b = 1, z = 0.5),data=c)\n  return(model1)\n\n}\n\n\ncopredict <- function(n.indep, assoc.df, iter1, iter2) {\n\n  estlist <- c()\n  for (i in 1:iter1) {\n  q <- coef(binera(assoc.df, iter2))\n  est <- q[\"b\"] * (n.indep)^(q[\"z\"])\n  estlist <- c(estlist,est)\n  }\n\n  est <- mean(estlist)\n  error <- qt(0.975,df=iter1-1)*sd(estlist)/sqrt(iter1)\n  lci <- est - 1.96*error\n  uci <- est + 1.96*error\n  print(paste(\"Estimated number of species is\",est))\n  print(paste(\"The lower 95% CI is\",lci))\n  print(paste(\"The upper 95% CI is\",uci))\n\n\n}\n",
    "created" : 1537681075405.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1610650962",
    "id" : "812BD9CA",
    "lastKnownWriteTime" : 1537682545,
    "last_content_update" : 1537682545709,
    "path" : "~/GitHub/codependent/R/hello.R",
    "project_path" : "R/hello.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}